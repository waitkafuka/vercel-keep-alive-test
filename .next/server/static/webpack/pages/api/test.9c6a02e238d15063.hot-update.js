"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/api/test",{

/***/ "(middleware)/./pages/api/test.js":
/*!***************************!*\
  !*** ./pages/api/test.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"config\": () => (/* binding */ config),\n/* harmony export */   \"default\": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var eventsource_parser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! eventsource-parser */ \"(middleware)/./node_modules/eventsource-parser/dist/index.cjs.mjs\");\n/* harmony import */ var openai__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! openai */ \"(middleware)/./node_modules/openai/dist/index.js\");\n/* harmony import */ var openai__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(openai__WEBPACK_IMPORTED_MODULE_0__);\n\n\nconst decoder = new TextDecoder();\nconst encoder = new TextEncoder();\n// export const runtime = 'edge';\nconst config = {\n    runtime: \"edge\"\n};\nconst configuration = new openai__WEBPACK_IMPORTED_MODULE_0__.Configuration({\n    apiKey: process.env.OPENAI_API_KEY,\n    baseOptions: {}\n});\n// 开发环境需要代理\n// eslint-disable-next-line no-unused-expressions\n true && (configuration.baseOptions.proxy = {\n    host: \"127.0.0.1\",\n    port: 7890\n});\nconst openai = new openai__WEBPACK_IMPORTED_MODULE_0__.OpenAIApi(configuration);\n/* harmony default export */ async function __WEBPACK_DEFAULT_EXPORT__(req, res) {\n    const payload = {\n        model: \"gpt-3.5-turbo\",\n        messages: [\n            {\n                role: \"user\",\n                content: \"hello\"\n            }\n        ],\n        // prompt,\n        temperature: 0.7,\n        top_p: 1,\n        stream: true,\n        n: 1\n    };\n    const chatResponse = await fetch(\"https://api.openai.com/v1/chat/completions\", {\n        headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${process.env.OPENAI_API_KEY ?? \"\"}`\n        },\n        method: \"POST\",\n        body: JSON.stringify(payload)\n    });\n    // const chatResponse2 = await openai.createChatCompletion(\n    //   {\n    //     model: 'gpt-3.5-turbo',\n    //     messages: [\n    //       {\n    //         role: 'user',\n    //         content: 'hello',\n    //       },\n    //     ],\n    //     stream: true,\n    //   },\n    //   { responseType: 'stream' },\n    // );\n    const stream = new ReadableStream({\n        async start (controller) {\n            // callback\n            function onParse(event) {\n                if (event.type === \"event\") {\n                    const { data  } = event;\n                    // https://beta.openai.com/docs/api-reference/completions/create#completions/create-stream\n                    if (data === \"[DONE]\") {\n                        controller.close();\n                        return;\n                    }\n                    try {\n                        const queue = encoder.encode(data);\n                        controller.enqueue(queue);\n                    // counter++;\n                    } catch (e) {\n                        // maybe parse error\n                        controller.error(e);\n                    }\n                }\n            }\n            // stream response (SSE) from OpenAI may be fragmented into multiple chunks\n            // this ensures we properly read chunks and invoke an event for each SSE event stream\n            const parser = (0,eventsource_parser__WEBPACK_IMPORTED_MODULE_1__.createParser)(onParse);\n            // https://web.dev/streams/#asynchronous-iteration\n            for await (const chunk of chatResponse.data){\n                parser.feed(decoder.decode(chunk));\n            }\n        }\n    });\n    return new Response(stream);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vcGFnZXMvYXBpL3Rlc3QuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBa0Q7QUFDQTtBQUVsRCxNQUFNRyxVQUFVLElBQUlDO0FBQ3BCLE1BQU1DLFVBQVUsSUFBSUM7QUFFcEIsaUNBQWlDO0FBRTFCLE1BQU1DLFNBQVM7SUFDcEJDLFNBQVM7QUFDWCxFQUFFO0FBRUYsTUFBTUMsZ0JBQWdCLElBQUlSLGlEQUFhQSxDQUFDO0lBQ3RDUyxRQUFRQyxRQUFRQyxHQUFHLENBQUNDLGNBQWM7SUFDbENDLGFBQWEsQ0FBQztBQUNoQjtBQUNBLFdBQVc7QUFDWCxpREFBaUQ7QUFqQmpELEtBa0J5QixJQUNuQkwsQ0FBQUEsY0FBY0ssV0FBVyxDQUFDQyxLQUFLLEdBQUc7SUFDcENDLE1BQU07SUFDTkMsTUFBTTtBQUNSO0FBQ0YsTUFBTUMsU0FBUyxJQUFJaEIsNkNBQVNBLENBQUNPO0FBRTdCLDZCQUFlLDBDQUFnQlUsR0FBRyxFQUFFQyxHQUFHLEVBQUU7SUFDdkMsTUFBTUMsVUFBVTtRQUNkQyxPQUFPO1FBQ1BDLFVBQVU7WUFBQztnQkFBRUMsTUFBTTtnQkFBUUMsU0FBUztZQUFRO1NBQUU7UUFDOUMsVUFBVTtRQUNWQyxhQUFhO1FBQ2JDLE9BQU87UUFDUEMsUUFBUSxJQUFJO1FBQ1pDLEdBQUc7SUFDTDtJQUVBLE1BQU1DLGVBQWUsTUFBTUMsTUFBTSw4Q0FBOEM7UUFDN0VDLFNBQVM7WUFDUCxnQkFBZ0I7WUFDaEJDLGVBQWUsQ0FBQyxPQUFPLEVBQUV0QixRQUFRQyxHQUFHLENBQUNDLGNBQWMsSUFBSSxHQUFHLENBQUM7UUFDN0Q7UUFDQXFCLFFBQVE7UUFDUkMsTUFBTUMsS0FBS0MsU0FBUyxDQUFDaEI7SUFDdkI7SUFDQSwyREFBMkQ7SUFDM0QsTUFBTTtJQUNOLDhCQUE4QjtJQUM5QixrQkFBa0I7SUFDbEIsVUFBVTtJQUNWLHdCQUF3QjtJQUN4Qiw0QkFBNEI7SUFDNUIsV0FBVztJQUNYLFNBQVM7SUFDVCxvQkFBb0I7SUFDcEIsT0FBTztJQUNQLGdDQUFnQztJQUNoQyxLQUFLO0lBRUwsTUFBTU8sU0FBUyxJQUFJVSxlQUFlO1FBQ2hDLE1BQU1DLE9BQU1DLFVBQVUsRUFBRTtZQUN0QixXQUFXO1lBQ1gsU0FBU0MsUUFBUUMsS0FBSyxFQUFFO2dCQUN0QixJQUFJQSxNQUFNQyxJQUFJLEtBQUssU0FBUztvQkFDMUIsTUFBTSxFQUFFQyxLQUFJLEVBQUUsR0FBR0Y7b0JBQ2pCLDBGQUEwRjtvQkFDMUYsSUFBSUUsU0FBUyxVQUFVO3dCQUNyQkosV0FBV0ssS0FBSzt3QkFDaEI7b0JBQ0YsQ0FBQztvQkFDRCxJQUFJO3dCQUNGLE1BQU1DLFFBQVF6QyxRQUFRMEMsTUFBTSxDQUFDSDt3QkFDN0JKLFdBQVdRLE9BQU8sQ0FBQ0Y7b0JBQ25CLGFBQWE7b0JBQ2YsRUFBRSxPQUFPRyxHQUFHO3dCQUNWLG9CQUFvQjt3QkFDcEJULFdBQVdVLEtBQUssQ0FBQ0Q7b0JBQ25CO2dCQUNGLENBQUM7WUFDSDtZQUVBLDJFQUEyRTtZQUMzRSxxRkFBcUY7WUFDckYsTUFBTUUsU0FBU25ELGdFQUFZQSxDQUFDeUM7WUFDNUIsa0RBQWtEO1lBQ2xELFdBQVcsTUFBTVcsU0FBU3RCLGFBQWFjLElBQUksQ0FBRTtnQkFDM0NPLE9BQU9FLElBQUksQ0FBQ2xELFFBQVFtRCxNQUFNLENBQUNGO1lBQzdCO1FBQ0Y7SUFDRjtJQUVBLE9BQU8sSUFBSUcsU0FBUzNCO0FBQ3RCLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vcGFnZXMvYXBpL3Rlc3QuanM/NmU3YSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVQYXJzZXIgfSBmcm9tICdldmVudHNvdXJjZS1wYXJzZXInO1xuaW1wb3J0IHsgQ29uZmlndXJhdGlvbiwgT3BlbkFJQXBpIH0gZnJvbSAnb3BlbmFpJztcblxuY29uc3QgZGVjb2RlciA9IG5ldyBUZXh0RGVjb2RlcigpO1xuY29uc3QgZW5jb2RlciA9IG5ldyBUZXh0RW5jb2RlcigpO1xuXG4vLyBleHBvcnQgY29uc3QgcnVudGltZSA9ICdlZGdlJztcblxuZXhwb3J0IGNvbnN0IGNvbmZpZyA9IHtcbiAgcnVudGltZTogJ2VkZ2UnLFxufTtcblxuY29uc3QgY29uZmlndXJhdGlvbiA9IG5ldyBDb25maWd1cmF0aW9uKHtcbiAgYXBpS2V5OiBwcm9jZXNzLmVudi5PUEVOQUlfQVBJX0tFWSxcbiAgYmFzZU9wdGlvbnM6IHt9LFxufSk7XG4vLyDlvIDlj5Hnjq/looPpnIDopoHku6PnkIZcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bnVzZWQtZXhwcmVzc2lvbnNcbnByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAnZGV2ZWxvcG1lbnQnXG4gICYmIChjb25maWd1cmF0aW9uLmJhc2VPcHRpb25zLnByb3h5ID0ge1xuICAgIGhvc3Q6ICcxMjcuMC4wLjEnLFxuICAgIHBvcnQ6IDc4OTAsXG4gIH0pO1xuY29uc3Qgb3BlbmFpID0gbmV3IE9wZW5BSUFwaShjb25maWd1cmF0aW9uKTtcblxuZXhwb3J0IGRlZmF1bHQgYXN5bmMgZnVuY3Rpb24gKHJlcSwgcmVzKSB7XG4gIGNvbnN0IHBheWxvYWQgPSB7XG4gICAgbW9kZWw6ICdncHQtMy41LXR1cmJvJyxcbiAgICBtZXNzYWdlczogW3sgcm9sZTogJ3VzZXInLCBjb250ZW50OiAnaGVsbG8nIH1dLFxuICAgIC8vIHByb21wdCxcbiAgICB0ZW1wZXJhdHVyZTogMC43LFxuICAgIHRvcF9wOiAxLFxuICAgIHN0cmVhbTogdHJ1ZSxcbiAgICBuOiAxLFxuICB9O1xuXG4gIGNvbnN0IGNoYXRSZXNwb25zZSA9IGF3YWl0IGZldGNoKCdodHRwczovL2FwaS5vcGVuYWkuY29tL3YxL2NoYXQvY29tcGxldGlvbnMnLCB7XG4gICAgaGVhZGVyczoge1xuICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICAgIEF1dGhvcml6YXRpb246IGBCZWFyZXIgJHtwcm9jZXNzLmVudi5PUEVOQUlfQVBJX0tFWSA/PyAnJ31gLFxuICAgIH0sXG4gICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgYm9keTogSlNPTi5zdHJpbmdpZnkocGF5bG9hZCksXG4gIH0pO1xuICAvLyBjb25zdCBjaGF0UmVzcG9uc2UyID0gYXdhaXQgb3BlbmFpLmNyZWF0ZUNoYXRDb21wbGV0aW9uKFxuICAvLyAgIHtcbiAgLy8gICAgIG1vZGVsOiAnZ3B0LTMuNS10dXJibycsXG4gIC8vICAgICBtZXNzYWdlczogW1xuICAvLyAgICAgICB7XG4gIC8vICAgICAgICAgcm9sZTogJ3VzZXInLFxuICAvLyAgICAgICAgIGNvbnRlbnQ6ICdoZWxsbycsXG4gIC8vICAgICAgIH0sXG4gIC8vICAgICBdLFxuICAvLyAgICAgc3RyZWFtOiB0cnVlLFxuICAvLyAgIH0sXG4gIC8vICAgeyByZXNwb25zZVR5cGU6ICdzdHJlYW0nIH0sXG4gIC8vICk7XG5cbiAgY29uc3Qgc3RyZWFtID0gbmV3IFJlYWRhYmxlU3RyZWFtKHtcbiAgICBhc3luYyBzdGFydChjb250cm9sbGVyKSB7XG4gICAgICAvLyBjYWxsYmFja1xuICAgICAgZnVuY3Rpb24gb25QYXJzZShldmVudCkge1xuICAgICAgICBpZiAoZXZlbnQudHlwZSA9PT0gJ2V2ZW50Jykge1xuICAgICAgICAgIGNvbnN0IHsgZGF0YSB9ID0gZXZlbnQ7XG4gICAgICAgICAgLy8gaHR0cHM6Ly9iZXRhLm9wZW5haS5jb20vZG9jcy9hcGktcmVmZXJlbmNlL2NvbXBsZXRpb25zL2NyZWF0ZSNjb21wbGV0aW9ucy9jcmVhdGUtc3RyZWFtXG4gICAgICAgICAgaWYgKGRhdGEgPT09ICdbRE9ORV0nKSB7XG4gICAgICAgICAgICBjb250cm9sbGVyLmNsb3NlKCk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgfVxuICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICBjb25zdCBxdWV1ZSA9IGVuY29kZXIuZW5jb2RlKGRhdGEpO1xuICAgICAgICAgICAgY29udHJvbGxlci5lbnF1ZXVlKHF1ZXVlKTtcbiAgICAgICAgICAgIC8vIGNvdW50ZXIrKztcbiAgICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgICAvLyBtYXliZSBwYXJzZSBlcnJvclxuICAgICAgICAgICAgY29udHJvbGxlci5lcnJvcihlKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgLy8gc3RyZWFtIHJlc3BvbnNlIChTU0UpIGZyb20gT3BlbkFJIG1heSBiZSBmcmFnbWVudGVkIGludG8gbXVsdGlwbGUgY2h1bmtzXG4gICAgICAvLyB0aGlzIGVuc3VyZXMgd2UgcHJvcGVybHkgcmVhZCBjaHVua3MgYW5kIGludm9rZSBhbiBldmVudCBmb3IgZWFjaCBTU0UgZXZlbnQgc3RyZWFtXG4gICAgICBjb25zdCBwYXJzZXIgPSBjcmVhdGVQYXJzZXIob25QYXJzZSk7XG4gICAgICAvLyBodHRwczovL3dlYi5kZXYvc3RyZWFtcy8jYXN5bmNocm9ub3VzLWl0ZXJhdGlvblxuICAgICAgZm9yIGF3YWl0IChjb25zdCBjaHVuayBvZiBjaGF0UmVzcG9uc2UuZGF0YSkge1xuICAgICAgICBwYXJzZXIuZmVlZChkZWNvZGVyLmRlY29kZShjaHVuaykpO1xuICAgICAgfVxuICAgIH0sXG4gIH0pO1xuXG4gIHJldHVybiBuZXcgUmVzcG9uc2Uoc3RyZWFtKTtcbn1cbiJdLCJuYW1lcyI6WyJjcmVhdGVQYXJzZXIiLCJDb25maWd1cmF0aW9uIiwiT3BlbkFJQXBpIiwiZGVjb2RlciIsIlRleHREZWNvZGVyIiwiZW5jb2RlciIsIlRleHRFbmNvZGVyIiwiY29uZmlnIiwicnVudGltZSIsImNvbmZpZ3VyYXRpb24iLCJhcGlLZXkiLCJwcm9jZXNzIiwiZW52IiwiT1BFTkFJX0FQSV9LRVkiLCJiYXNlT3B0aW9ucyIsInByb3h5IiwiaG9zdCIsInBvcnQiLCJvcGVuYWkiLCJyZXEiLCJyZXMiLCJwYXlsb2FkIiwibW9kZWwiLCJtZXNzYWdlcyIsInJvbGUiLCJjb250ZW50IiwidGVtcGVyYXR1cmUiLCJ0b3BfcCIsInN0cmVhbSIsIm4iLCJjaGF0UmVzcG9uc2UiLCJmZXRjaCIsImhlYWRlcnMiLCJBdXRob3JpemF0aW9uIiwibWV0aG9kIiwiYm9keSIsIkpTT04iLCJzdHJpbmdpZnkiLCJSZWFkYWJsZVN0cmVhbSIsInN0YXJ0IiwiY29udHJvbGxlciIsIm9uUGFyc2UiLCJldmVudCIsInR5cGUiLCJkYXRhIiwiY2xvc2UiLCJxdWV1ZSIsImVuY29kZSIsImVucXVldWUiLCJlIiwiZXJyb3IiLCJwYXJzZXIiLCJjaHVuayIsImZlZWQiLCJkZWNvZGUiLCJSZXNwb25zZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./pages/api/test.js\n");

/***/ })

});